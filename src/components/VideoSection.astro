---
const {
  title = 'Así preparamos tus prepizzas',
  copy = 'Masa casera, fermentación justa y cocción pareja. Elegí tomate clásico o cebolla estilo fugazza.',
  src = '/video-prepizzas.webm',       // poné tu video en /public
  poster = '/video-poster.jpg',       // imagen de portada en /public     
} = Astro.props;
const WHATSAPP = 'https://wa.me/5491133544047?text=Hola%20!%20Quiero%20hacer%20un%20pedido%20de%20prepizzas%20';
---

<section id="video" class="relative overflow-hidden bg-bg">
  <!-- textura + fades para unir con el resto -->
  
  <div class="pointer-events-none absolute top-0 left-0 right-0 h-16 z-[2] bg-gradient-to-b from-bg to-transparent"></div>
  <div class="pointer-events-none absolute bottom-0 left-0 right-0 h-20 z-[2] bg-gradient-to-t from-bg to-transparent"></div>

  <div class="container relative z-[3] py-14 md:py-20 grid items-center gap-8 md:grid-cols-2">
    <!-- Texto -->
    <div class="flex flex-col gap-4 text-center md:text-left">
      <h2 class="font-serif text-primary text-3xl md:text-4xl">{title}</h2>
      <p class="text-muted">{copy}</p>
      <div class="flex flex-wrap justify-center md:justify-start gap-3">
        <a href={WHATSAPP} target="_blank" rel="noopener" class="btn">Hacer pedido</a>
        <a href="#sabores" class="btn bg-accent text-white hover:opacity-90">Ver opciones</a>
      </div>
    </div>

    <!-- Video -->
    <figure class="relative rounded-2xl overflow-hidden shadow-2xl bg-white">
      <video
        id="prepizzasVideo"
        class="w-full h-auto block"
        src={src}
        poster={poster}
        playsinline
        muted
        loop
        preload="metadata"
        controls
      >
        <track kind="captions" srcLang="es" label="Español"  default />
      </video>
    </figure>
  </div>

  <!-- Autoplay inteligente: play al entrar, pause al salir -->
  <script is:inline>
    const v = document.getElementById('prepizzasVideo');
    if (v) {
      const io = new IntersectionObserver(
        (entries) => {
          entries.forEach(async (e) => {
            try {
              if (e.isIntersecting) { await v.play(); }
              else { v.pause(); }
            } catch (_) {}
          });
        },
        { threshold: 0.5 }
      );
      io.observe(v);
    }
  </script>
</section>
