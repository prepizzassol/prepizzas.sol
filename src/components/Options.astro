---
const opciones = [
  { titulo: 'Tomate Clásica', desc: 'Salsa casera y condimentos', precio: '$1800', img: '/images/tomate.webp' },
  { titulo: 'Cebolla (Fugazza)', desc: 'Cebolla dorada + orégano', precio: '$1900', img: '/images/cebolla.webp' },
  { titulo: 'Mixta', desc: '½ Tomate • ½ Cebolla', precio: '$1900', img: '/images/mixta.webp' },
  { titulo: 'Pizzetas', desc: 'Ideales para picadas', precio: '$1600', img: '/images/pizzeta.webp' },
];
---

<section id="sabores" class="relative bg-bg">
<!-- Textura -->
  <div class="absolute inset-0 z-[1] bg-[url('/texture-1.webp')] bg-no-repeat bg-cover bg-center opacity-15"></div>

  <!-- Fades superior/inferior para que se funda con las secciones vecinas -->
  <div class="pointer-events-none absolute top-0 left-0 right-0 h-20 z-[2] bg-gradient-to-b from-bg to-transparent"></div>
  <div class="pointer-events-none absolute bottom-0 left-0 right-0 h-24 z-[2] bg-gradient-to-t from-bg to-transparent"></div>
 <div class="container relative z-[3] py-14 md:py-20">
    <h2 class="section-title font-serif text-primary text-center">Sabores</h2>
    <p class="text-muted mb-6 text-center">Elegí tu base favorita. Todas aptas freezer y listas para horno o parrilla.</p>

    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {opciones.map((o, i) => (
        <article
          class="group relative bg-white rounded-2xl overflow-hidden shadow-md hover:shadow-xl transition
                 cursor-pointer transform-gpu opacity-0 translate-x-8
                 will-change-[transform,opacity]"
          data-reveal
          style={`transition-duration: 600ms; transition-property: transform, opacity; transition-timing-function: cubic-bezier(.2,.8,.2,1); transition-delay: ${i*70}ms;`}
        >
          <!-- Imagen -->
          <div class="aspect-[4/3] bg-bg overflow-hidden">
            <img src={o.img} alt={o.titulo} class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105" loading="lazy" />
          </div>

          <!-- Contenido -->
          <div class="p-4 flex flex-col gap-2">
            <h3 class="font-serif text-lg text-primary">{o.titulo}</h3>
            <p class="text-sm text-muted">{o.desc}</p>

            <div class="mt-3 flex items-center justify-between">
              <span class="inline-flex items-center rounded-full px-3 py-1 bg-accent text-white text-sm font-semibold">
                {o.precio}
              </span>
              <span class="text-sm text-muted">Disponible</span>
            </div>
          </div>

          <!-- Hover scale & lift -->
          <div class="absolute inset-0 rounded-2xl ring-1 ring-black/5 group-hover:ring-black/10 transition"></div>
          <div class="absolute inset-0 pointer-events-none transition transform group-hover:scale-[1.02]"></div>
        </article>
      ))}
    </div>
  </div>

  <!-- Script de revelado (entrada desde la derecha) -->
  <script is:inline>
    const prefersReduce = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const cards = Array.from(document.querySelectorAll('[data-reveal]'));

    if (prefersReduce) {
      cards.forEach(el => {
        el.style.transition = 'none';
        el.classList.remove('opacity-0','translate-x-8');
        el.classList.add('opacity-100','translate-x-0');
      });
    } else {
      const io = new IntersectionObserver((entries, obs) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const el = entry.target;
            el.classList.remove('opacity-0','translate-x-8');
            el.classList.add('opacity-100','translate-x-0');
            obs.unobserve(el);
          }
        });
      }, { threshold: 0.12 });

      cards.forEach(el => io.observe(el));
    }
  </script>
</section>
